criminal <- read_excel("criminal_data_clean_2.xlsx")
#Subset / Removal of Labels
criminal_1 <- subset(criminal, select = -c(weight, eyes, hair,
forename, present_family_name, charges))
glimpse(criminal)
glimpse(criminal_1)
#TEXT PARSING
#Preventing concatination of two words while removing punctuaion marks.
#Inserted space after every comma
crim <- add_comma_space(criminal_1$Translation)
#Inserted space after every period
crim_1 <- gsub("\\.", ". ", crim)
#Inserted space after every semicolon
crim_2 <- gsub("\\;", "; ", crim_1)
#Inserted space after every bracket
crim_3 <- gsub("\\)", ") ", crim_2)
#Create a Vector Corpus
textcorpus <- VCorpus(VectorSource(crim_3))
#Data Transformation
textcorpus <- tm_map(textcorpus, content_transformer(tolower))
textcorpus <- tm_map(textcorpus, removeNumbers)
textcorpus <- tm_map(textcorpus, removePunctuation)
textcorpus <- tm_map(textcorpus, removeWords, stopwords("english"))
textcorpus <- tm_map(textcorpus, stripWhitespace)
#Create Document - Term Matrix
in_dtm <- DocumentTermMatrix(textcorpus)
in_dtm
#Convert VCorpus to Data Frame
in_dtm_df <- as.matrix(in_dtm)
#Create Term Frequency Data Frame
tf <- (sort(colSums(in_dtm_df), decreasing = TRUE))
tf_df <- data.frame(word = names(tf), Frequency = tf)
tf_df[1:20,]
plotly::ggplotly(ggplot(tf_df[1:20,], aes(reorder(word, -Frequency), Frequency)) +
geom_bar(stat = "identity", width = 0.5, fill = "tomato2") +
labs(title = "Interpol Criminal Charges - Term Frequency", x = "Term", y = "Frequency") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)))
#Mapping Associated Words
sexual <- findAssocs(in_dtm, "sexual", 0.1)
sexual
murder <- findAssocs(in_dtm, "murder", 0.1)
murder
firearm <- findAssocs(in_dtm, "firearm", 0.1)
firearm
terrorist <- findAssocs(in_dtm, "terrorist", 0.1)
terrorist
conspiracy <- findAssocs(in_dtm, "conspiracy", 0.1)
conspiracy
money <- findAssocs(in_dtm, "money", 0.1)
money
fraud <- findAssocs(in_dtm, "fraud", 0.1)
fraud
#Conversion of PlainTextDocument to Character Data.Frame
text <- sapply(textcorpus, as.character)
text_df <- as.data.frame(text, stringsAsFactors = F)
#Appending Cleansed Charges to Original Data-set
crim_bind <- cbind(criminal, text_df)
#Adding a New Column - Crime_Nature to Original Data-set
crim_bind <- crim_bind %>%
mutate(Sexual_Abuse = grepl("sex|sexual|sexual abuse|molestation|lust|incest|pornography|minor|rape|abduction|fornication|intercourse|child", text)) %>%
mutate(Murder =  grepl("murder|homicide|genocide|feminicide|femicide|manslaughter|assassination|kill|killing|death", text)) %>%
mutate(Illegal_Firearms = grepl("firearm|armed|ammunition|weapon|arms", text)) %>%
mutate(Terrorism_and_Disruptive_Activity = grepl("terror|terrorist|terrorism|terrorists", text)) %>%
mutate(Narcotic_Drugs_and_Psychotropic_Substances = grepl("narcotic|drugs|drug|psychotropics|drug trafficking|methylenedioxymethamphetamine|grams|cocaine|smuggling|psychoactive|marijuana|ephedrine|heroin|kilograms|doses|trafficking drugs", text)) %>%
mutate(Forgery_and_Fraud =  grepl("fake|falsification|falsifying|false|tampering|forge|forged|certification|counterfeit|forgery|fraud|breach trust", text)) %>%
mutate(Tax_Evasion_and_Money_Laundering = grepl("tax|evasion|tax evasion|money|loan|money laundering|laundering|embezzlement|embezzling|financial", text)) %>%
mutate(Robbery_and_Dacoity = grepl("robbery|burglary|stolen|theft|extortion|swindling|dacoity|misappropriation|swindle|stealing", text)) %>%
mutate(Conspiracy_and_Its_Consequential_Crimes = grepl("conspiracy|bribe|bribery|office|position|corruption|corrupt|cheat|cheating|breach trust|trust", text)) %>%
mutate(Copyright_Infringement_and_Piracy = grepl("copyright|infringement|piracy", text)) %>%
mutate(Human_Trafficking_and_Adultry = grepl("human|human trafficking|women|prostitution|prostitute|trafficking", text)) %>%
mutate(Illegal_Wildlife_Trade = grepl("wildlife|wild", text)) %>%
mutate(Unlawful_Circulation_of_Precious_Metals_and_Stones = grepl("metals|stones", text)) %>%
mutate(Illegal_Group_Crime_Activities = grepl("kidnapping|hooliganism|illegal agrupaciones|criminal|groups|criminal group|unlawful|harm|injure|injury|injuries|wounding|war crime|assault|violence|harassement|torture|violation", text)) %>%
mutate(Prison_Break = grepl("escape|escaping", text)) %>%
mutate(Traffic_Offences = grepl("traffic|vehicles|vehicle|transport", text)) %>%
mutate(Deprivation_of_Liberty = grepl("deprivation|freedom|liberty", text))
# Create Age - Bins
crim_bind <- crim_bind %>%
mutate(age_bin = case_when(between(age, 15, 19) ~ "15 - 19",
between(age, 20, 30) ~ "20 - 30",
between(age, 31, 40) ~ "31 - 40",
between(age, 41, 50) ~ "41 - 50",
between(age, 51, 60) ~ "51 - 60",
between(age, 61, 70) ~ "61 - 70",
between(age, 71, 80) ~ "71 - 80",
between(age, 81, 89) ~ "81 - 89"))
crim_bind[, c(8,9,12,13,35)] <- lapply(crim_bind[, c(8,9,12,13,35)], as.factor)
glimpse(crim_bind)
crim_age <- filter(crim_bind, crim_bind$age < 90)
range(crim_age$age)
crim_col <- crim_bind %>%
subset(select = -c(criminal_id, age,text, Translation, wanted_by, sex, dob, height, language, nationality, place_of_birth, weight, eyes, hair, forename, present_family_name, charges, age_bin))
crime_count<- sort(colSums(crim_col, na.rm = T), decreasing = T)
crime_count_df <- data.frame(word = names(crime_count), Frequency = crime_count)
plotly::ggplotly(ggplot(crime_count_df, aes(reorder(word, Frequency), Frequency, fill = Frequency, text = word)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_gradient(low="yellow", high="red") +
labs(y = "Crime Count", x = "Nature of Crime"))
crim_bind <- crim_bind %>%
mutate(count = rowSums(crim_col, na.rm = T))
crim_group <- crim_bind %>%
select(criminal_id, age, nationality, sex, wanted_by, count)
plotly::ggplotly(ggplot(crim_bind, aes(factor(count)))+
geom_bar(fill = "tomato2") +
geom_text(stat='count', aes(label=..count..), vjust= -0.5) +
labs(x = "above figure illustrates the no. of crimes committed by all criminals", y= "crime count"))
nation_split <- crim_bind %>%
select(nationality, sex) %>%
group_by(nationality,sex) %>%
summarise(count = n()) %>%
filter(count >=40)
plotly::ggplotly(ggplot(nation_split, aes(reorder(nationality, count), count, fill = sex)) +
geom_bar(stat = "identity", color = "white", position = "stack") +
labs(x= "Nationality", y = "Criminal Count", title = "Country Vs. Criminals") +
coord_flip())
wanted_count <- crim_bind %>%
select(wanted_by, sex) %>%
group_by(wanted_by,sex) %>%
summarise(count_1 = n()) %>%
filter(count_1 >= 40)
plotly::ggplotly(ggplot(wanted_count, aes(reorder(wanted_by, count_1), count_1, fill = sex)) +
geom_bar(stat = "identity", color = "white", position = "stack") +
labs(x= "Wanted by Country", y = "Criminal Count", title = "Wanted-by Vs. Criminals") +
coord_flip())
crim_gather <- crim_bind %>%
gather(Nature, Status, -c(criminal_id, age,text, Translation, wanted_by, sex, dob, height, language, nationality, place_of_birth, weight, eyes, hair, forename, present_family_name, charges, age_bin, count))
crim_gather <- crim_gather[crim_gather$Status == TRUE,]
crim_gather[, 21] <- as.factor(crim_gather[, 21])
glimpse(crim_gather)
mf <- plotly::ggplotly(ggplot(crim_bind, aes(sex)) +
geom_bar(fill = "tomato2") +
labs(x= "Gender", y = "Count", title = "Interpol Gender Metrics"))
mf
bin <- plotly::ggplotly(ggplot(crim_bind, aes(age_bin)) +
geom_bar(fill = "tomato2") +
labs(x= "Age", y = "Count", title = "Interpol Age Metrics"))
bin <- plotly::ggplotly(ggplot(crim_bind, aes(age_bin)) +
geom_bar(fill = "tomato2") +
labs(x= "Age", y = "Count", title = "Interpol Age Metrics"))
bin
crim_gather <- crim_gather[crim_gather$Status == TRUE,]
crim_gather[, 21] <- as.factor(crim_gather[, 21])
glimpse(crim_gather)
crim_gather <- crim_gather[crim_gather$Status == TRUE,]
crim_gather[, 21] <- as.factor(crim_gather[, 21])
plotly::ggplotly(ggplot(crim_gather, aes(Nature, fill = sex)) +
geom_bar(fill = "tomato2") +
labs(x= "Gender", y = "Count", title = "Interpol Gender Metrics"))
crim_gather <- crim_gather[crim_gather$Status == TRUE,]
crim_gather[, 21] <- as.factor(crim_gather[, 21])
plotly::ggplotly(ggplot(crim_gather, aes(Nature, fill = sex)) +
geom_bar(fill = "tomato2") +
labs(x= "Gender", y = "Count", title = "Interpol Gender Metrics") +
coord_flip())
crim_gather <- crim_gather[crim_gather$Status == TRUE,]
crim_gather[, 21] <- as.factor(crim_gather[, 21])
plotly::ggplotly(ggplot(crim_gather, aes(Nature, fill = sex)) +
geom_bar(fill = "tomato2") +
labs(x= "Gender", y = "Count", title = "Interpol Gender Metrics") +
coord_flip())
crim_gather <- crim_gather[crim_gather$Status == TRUE,]
crim_gather[, 21] <- as.factor(crim_gather[, 21])
plotly::ggplotly(ggplot(crim_gather, aes(Nature, fill = sex)) +
geom_bar(fill = "tomato2", position = "stack") +
labs(x= "Gender", y = "Count", title = "Interpol Gender Metrics") +
coord_flip())
crim_gather <- crim_gather[crim_gather$Status == TRUE,]
crim_gather[, 21] <- as.factor(crim_gather[, 21])
gen_nat <- crim_gather %>%
group_by(Nature, sex)
gen_nat
plotly::ggplotly(ggplot(crim_gather, aes(Nature, fill = sex)) +
geom_bar(fill = "tomato2", position = "stack") +
labs(x= "Gender", y = "Count", title = "Interpol Gender Metrics") +
coord_flip())
crim_gather <- crim_gather[crim_gather$Status == TRUE,]
crim_gather[, 21] <- as.factor(crim_gather[, 21])
gen_nat <- crim_gather %>%
select(Nature, sex)
group_by(Nature, sex)
crim_gather <- crim_gather[crim_gather$Status == TRUE,]
crim_gather[, 21] <- as.factor(crim_gather[, 21])
gen_nat <- crim_gather %>%
select(Nature, sex) %>%
group_by(Nature, sex)
gen_nat
plotly::ggplotly(ggplot(crim_gather, aes(Nature, fill = sex)) +
geom_bar(fill = "tomato2", position = "stack") +
labs(x= "Gender", y = "Count", title = "Interpol Gender Metrics") +
coord_flip())
crim_gather <- crim_gather[crim_gather$Status == TRUE,]
crim_gather[, 21] <- as.factor(crim_gather[, 21])
gen_nat <- crim_gather %>%
select(Nature, sex) %>%
group_by(Nature, sex)
gen_nat
plotly::ggplotly(ggplot(crim_gather, aes(Nature, sex)) +
geom_bar(fill = "tomato2", position = "stack") +
labs(x= "Gender", y = "Count", title = "Interpol Gender Metrics") +
coord_flip())
crim_gather <- crim_gather[crim_gather$Status == TRUE,]
crim_gather[, 21] <- as.factor(crim_gather[, 21])
gen_nat <- crim_gather %>%
select(Nature, sex) %>%
group_by(Nature, sex)
gen_nat
plotly::ggplotly(ggplot(crim_gather, aes(Nature, sex)) +
geom_bar(stat = "count", fill = "tomato2", position = "stack") +
labs(x= "Gender", y = "Count", title = "Interpol Gender Metrics") +
coord_flip())
crim_gather <- crim_gather[crim_gather$Status == TRUE,]
crim_gather[, 21] <- as.factor(crim_gather[, 21])
gen_nat <- crim_gather %>%
select(Nature, sex) %>%
group_by(Nature, sex) %>%
summarise(cnt = n())
gen_nat
plotly::ggplotly(ggplot(crim_gather, aes(Nature, sex)) +
geom_bar(stat = "count", fill = "tomato2", position = "stack") +
labs(x= "Gender", y = "Count", title = "Interpol Gender Metrics") +
coord_flip())
crim_gather <- crim_gather[crim_gather$Status == TRUE,]
crim_gather[, 21] <- as.factor(crim_gather[, 21])
gen_nat <- crim_gather %>%
select(Nature, sex) %>%
group_by(Nature, sex) %>%
summarise(cnt = n())
gen_nat
plotly::ggplotly(ggplot(gen_nat, aes(Nature)) +
geom_bar(stat = "count", fill = "tomato2", position = "stack") +
labs(x= "Gender", y = "Count", title = "Interpol Gender Metrics") +
coord_flip())
crim_gather <- crim_gather[crim_gather$Status == TRUE,]
crim_gather[, 21] <- as.factor(crim_gather[, 21])
gen_nat <- crim_gather %>%
select(Nature, sex) %>%
group_by(Nature, sex) %>%
summarise(cnt = n())
gen_nat
plotly::ggplotly(ggplot(gen_nat, aes(Nature, cnt, color = sex)) +
geom_bar(stat = "count", fill = "tomato2", position = "stack") +
labs(x= "Gender", y = "Count", title = "Interpol Gender Metrics") +
coord_flip())
crim_gather <- crim_gather[crim_gather$Status == TRUE,]
crim_gather[, 21] <- as.factor(crim_gather[, 21])
gen_nat <- crim_gather %>%
select(Nature, sex) %>%
group_by(Nature, sex) %>%
summarise(cnt = n())
gen_nat
plotly::ggplotly(ggplot(gen_nat, aes(Nature, cnt, color = sex)) +
geom_bar(stat = "identity", fill = "tomato2", position = "stack") +
labs(x= "Gender", y = "Count", title = "Interpol Gender Metrics") +
coord_flip())
crim_gather <- crim_gather[crim_gather$Status == TRUE,]
crim_gather[, 21] <- as.factor(crim_gather[, 21])
gen_nat <- crim_gather %>%
select(Nature, sex) %>%
group_by(Nature, sex) %>%
summarise(cnt = n())
gen_nat
plotly::ggplotly(ggplot(gen_nat, aes(Nature, cnt, color = sex)) +
geom_bar(stat = "identity", fill = "tomato2", position = "dodge") +
labs(x= "Gender", y = "Count", title = "Interpol Gender Metrics") +
coord_flip())
crim_gather <- crim_gather[crim_gather$Status == TRUE,]
crim_gather[, 21] <- as.factor(crim_gather[, 21])
gen_nat <- crim_gather %>%
select(Nature, sex) %>%
group_by(Nature, sex) %>%
summarise(cnt = n())
gen_nat
plotly::ggplotly(ggplot(gen_nat, aes(Nature, cnt, fill = sex)) +
geom_bar(stat = "identity", fill = "tomato2", position = "dodge") +
labs(x= "Gender", y = "Count", title = "Interpol Gender Metrics") +
coord_flip())
crim_gather <- crim_gather[crim_gather$Status == TRUE,]
crim_gather[, 21] <- as.factor(crim_gather[, 21])
gen_nat <- crim_gather %>%
select(Nature, sex) %>%
group_by(Nature, sex) %>%
summarise(cnt = n())
gen_nat
plotly::ggplotly(ggplot(gen_nat, aes(Nature, cnt, fill = sex)) +
geom_bar(stat = "identity", fill = "white", position = "dodge") +
labs(x= "Gender", y = "Count", title = "Interpol Gender Metrics") +
coord_flip())
crim_gather <- crim_gather[crim_gather$Status == TRUE,]
crim_gather[, 21] <- as.factor(crim_gather[, 21])
gen_nat <- crim_gather %>%
select(Nature, sex) %>%
group_by(Nature, sex) %>%
summarise(cnt = n())
gen_nat
plotly::ggplotly(ggplot(gen_nat, aes(Nature, cnt, fill = sex)) +
geom_bar(stat = "identity", color = "white", position = "dodge") +
labs(x= "Gender", y = "Count", title = "Interpol Gender Metrics") +
coord_flip())
shiny::runApp()
runApp()
crim_gather <- crim_gather[crim_gather$Status == TRUE,]
crim_gather[, 21] <- as.factor(crim_gather[, 21])
crim_gather %>%
select(Nature, sex) %>%
group_by(Nature, sex) %>%
summarise(cnt = n())
plotly::ggplotly(ggplot(gen_nat, aes(Nature, cnt, fill = sex)) +
geom_bar(stat = "identity", color = "white", position = "dodge") +
labs(x= "Gender", y = "Count", title = "Interpol Gender Metrics") +
coord_flip())
crim_gather <- crim_gather[crim_gather$Status == TRUE,]
crim_gather[, 21] <- as.factor(crim_gather[, 21])
crim_gather %>%
select(Nature, sex) %>%
group_by(Nature, sex) %>%
summarise(cnt = n())
plotly::ggplotly(ggplot(crim_gather, aes(Nature, cnt, fill = sex)) +
geom_bar(stat = "identity", color = "white", position = "dodge") +
labs(x= "Gender", y = "Count", title = "Interpol Gender Metrics") +
coord_flip())
#Laod the packages
library(readxl)
library(tm)
library(wordcloud)
library(stringr)
library(ggplot2)
library(SnowballC)
library(dplyr)
library(tidyverse)
library(qdap)
library(magrittr)
library(rJava)
library(textclean)
library(rmarkdown)
library(topicmodels)
library(tidytext)
library(xlsx)
library(plotly)
#Load the data-set
criminal <- read_excel("criminal_data_clean_2.xlsx")
#Subset / Removal of Labels
criminal_1 <- subset(criminal, select = -c(weight, eyes, hair,
forename, present_family_name, charges))
glimpse(criminal)
glimpse(criminal_1)
#TEXT PARSING
#Preventing concatination of two words while removing punctuaion marks.
#Inserted space after every comma
crim <- add_comma_space(criminal_1$Translation)
#Inserted space after every period
crim_1 <- gsub("\\.", ". ", crim)
#Inserted space after every semicolon
crim_2 <- gsub("\\;", "; ", crim_1)
#Inserted space after every bracket
crim_3 <- gsub("\\)", ") ", crim_2)
#Create a Vector Corpus
textcorpus <- VCorpus(VectorSource(crim_3))
#Data Transformation
textcorpus <- tm_map(textcorpus, content_transformer(tolower))
textcorpus <- tm_map(textcorpus, removeNumbers)
textcorpus <- tm_map(textcorpus, removePunctuation)
textcorpus <- tm_map(textcorpus, removeWords, stopwords("english"))
textcorpus <- tm_map(textcorpus, stripWhitespace)
#Create Document - Term Matrix
in_dtm <- DocumentTermMatrix(textcorpus)
in_dtm
#Convert VCorpus to Data Frame
in_dtm_df <- as.matrix(in_dtm)
#Create Term Frequency Data Frame
tf <- (sort(colSums(in_dtm_df), decreasing = TRUE))
tf_df <- data.frame(word = names(tf), Frequency = tf)
tf_df[1:20,]
plotly::ggplotly(ggplot(tf_df[1:20,], aes(reorder(word, -Frequency), Frequency)) +
geom_bar(stat = "identity", width = 0.5, fill = "tomato2") +
labs(title = "Interpol Criminal Charges - Term Frequency", x = "Term", y = "Frequency") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)))
#Mapping Associated Words
sexual <- findAssocs(in_dtm, "sexual", 0.1)
sexual
murder <- findAssocs(in_dtm, "murder", 0.1)
murder
firearm <- findAssocs(in_dtm, "firearm", 0.1)
firearm
terrorist <- findAssocs(in_dtm, "terrorist", 0.1)
terrorist
conspiracy <- findAssocs(in_dtm, "conspiracy", 0.1)
conspiracy
money <- findAssocs(in_dtm, "money", 0.1)
money
fraud <- findAssocs(in_dtm, "fraud", 0.1)
fraud
#Conversion of PlainTextDocument to Character Data.Frame
text <- sapply(textcorpus, as.character)
text_df <- as.data.frame(text, stringsAsFactors = F)
#Appending Cleansed Charges to Original Data-set
crim_bind <- cbind(criminal, text_df)
#Adding a New Column - Crime_Nature to Original Data-set
crim_bind <- crim_bind %>%
mutate(Sexual_Abuse = grepl("sex|sexual|sexual abuse|molestation|lust|incest|pornography|minor|rape|abduction|fornication|intercourse|child", text)) %>%
mutate(Murder =  grepl("murder|homicide|genocide|feminicide|femicide|manslaughter|assassination|kill|killing|death", text)) %>%
mutate(Illegal_Firearms = grepl("firearm|armed|ammunition|weapon|arms", text)) %>%
mutate(Terrorism_and_Disruptive_Activity = grepl("terror|terrorist|terrorism|terrorists", text)) %>%
mutate(Narcotic_Drugs_and_Psychotropic_Substances = grepl("narcotic|drugs|drug|psychotropics|drug trafficking|methylenedioxymethamphetamine|grams|cocaine|smuggling|psychoactive|marijuana|ephedrine|heroin|kilograms|doses|trafficking drugs", text)) %>%
mutate(Forgery_and_Fraud =  grepl("fake|falsification|falsifying|false|tampering|forge|forged|certification|counterfeit|forgery|fraud|breach trust", text)) %>%
mutate(Tax_Evasion_and_Money_Laundering = grepl("tax|evasion|tax evasion|money|loan|money laundering|laundering|embezzlement|embezzling|financial", text)) %>%
mutate(Robbery_and_Dacoity = grepl("robbery|burglary|stolen|theft|extortion|swindling|dacoity|misappropriation|swindle|stealing", text)) %>%
mutate(Conspiracy_and_Its_Consequential_Crimes = grepl("conspiracy|bribe|bribery|office|position|corruption|corrupt|cheat|cheating|breach trust|trust", text)) %>%
mutate(Copyright_Infringement_and_Piracy = grepl("copyright|infringement|piracy", text)) %>%
mutate(Human_Trafficking_and_Adultry = grepl("human|human trafficking|women|prostitution|prostitute|trafficking", text)) %>%
mutate(Illegal_Wildlife_Trade = grepl("wildlife|wild", text)) %>%
mutate(Unlawful_Circulation_of_Precious_Metals_and_Stones = grepl("metals|stones", text)) %>%
mutate(Illegal_Group_Crime_Activities = grepl("kidnapping|hooliganism|illegal agrupaciones|criminal|groups|criminal group|unlawful|harm|injure|injury|injuries|wounding|war crime|assault|violence|harassement|torture|violation", text)) %>%
mutate(Prison_Break = grepl("escape|escaping", text)) %>%
mutate(Traffic_Offences = grepl("traffic|vehicles|vehicle|transport", text)) %>%
mutate(Deprivation_of_Liberty = grepl("deprivation|freedom|liberty", text))
# Create Age - Bins
crim_bind <- crim_bind %>%
mutate(age_bin = case_when(between(age, 15, 19) ~ "15 - 19",
between(age, 20, 30) ~ "20 - 30",
between(age, 31, 40) ~ "31 - 40",
between(age, 41, 50) ~ "41 - 50",
between(age, 51, 60) ~ "51 - 60",
between(age, 61, 70) ~ "61 - 70",
between(age, 71, 80) ~ "71 - 80",
between(age, 81, 89) ~ "81 - 89"))
crim_bind[, c(8,9,12,13,35)] <- lapply(crim_bind[, c(8,9,12,13,35)], as.factor)
glimpse(crim_bind)
crim_age <- filter(crim_bind, crim_bind$age < 90)
range(crim_age$age)
crim_col <- crim_bind %>%
subset(select = -c(criminal_id, age,text, Translation, wanted_by, sex, dob, height, language, nationality, place_of_birth, weight, eyes, hair, forename, present_family_name, charges, age_bin))
crime_count<- sort(colSums(crim_col, na.rm = T), decreasing = T)
crime_count_df <- data.frame(word = names(crime_count), Frequency = crime_count)
plotly::ggplotly(ggplot(crime_count_df, aes(reorder(word, Frequency), Frequency, fill = Frequency, text = word)) +
geom_bar(stat = "identity") +
coord_flip() +
scale_fill_gradient(low="yellow", high="red") +
labs(y = "Crime Count", x = "Nature of Crime"))
crim_bind <- crim_bind %>%
mutate(count = rowSums(crim_col, na.rm = T))
crim_group <- crim_bind %>%
select(criminal_id, age, nationality, sex, wanted_by, count)
plotly::ggplotly(ggplot(crim_bind, aes(factor(count)))+
geom_bar(fill = "tomato2") +
geom_text(stat='count', aes(label=..count..), vjust= -0.5) +
labs(x = "above figure illustrates the no. of crimes committed by all criminals", y= "crime count"))
nation_split <- crim_bind %>%
select(nationality, sex) %>%
group_by(nationality,sex) %>%
summarise(count = n()) %>%
filter(count >=40)
plotly::ggplotly(ggplot(nation_split, aes(reorder(nationality, count), count, fill = sex)) +
geom_bar(stat = "identity", color = "white", position = "stack") +
labs(x= "Nationality", y = "Criminal Count", title = "Country Vs. Criminals") +
coord_flip())
wanted_count <- crim_bind %>%
select(wanted_by, sex) %>%
group_by(wanted_by,sex) %>%
summarise(count_1 = n()) %>%
filter(count_1 >= 40)
plotly::ggplotly(ggplot(wanted_count, aes(reorder(wanted_by, count_1), count_1, fill = sex)) +
geom_bar(stat = "identity", color = "white", position = "stack") +
labs(x= "Wanted by Country", y = "Criminal Count", title = "Wanted-by Vs. Criminals") +
coord_flip())
crim_gather <- crim_bind %>%
gather(Nature, Status, -c(criminal_id, age,text, Translation, wanted_by, sex, dob, height, language, nationality, place_of_birth, weight, eyes, hair, forename, present_family_name, charges, age_bin, count))
crim_gather <- crim_gather[crim_gather$Status == TRUE,]
crim_gather[, 21] <- as.factor(crim_gather[, 21])
glimpse(crim_gather)
plotly::ggplotly(ggplot(crim_bind, aes(sex)) +
geom_bar(fill = "tomato2") +
labs(x= "Gender", y = "Count", title = "Interpol Gender Metrics"))
plotly::ggplotly(ggplot(crim_bind, aes(age_bin)) +
geom_bar(fill = "tomato2") +
labs(x= "Age", y = "Count", title = "Interpol Age Metrics"))
mf
crim_gather <- crim_gather[crim_gather$Status == TRUE,]
crim_gather[, 21] <- as.factor(crim_gather[, 21])
gen_nat <- crim_gather %>%
select(Nature, sex) %>%
group_by(Nature, sex) %>%
summarise(cnt = n())
gen_nat
plotly::ggplotly(ggplot(gen_nat, aes(Nature, cnt, fill = sex)) +
geom_bar(stat = "identity", color = "white", position = "dodge") +
labs(x= "Gender", y = "Count", title = "Interpol Gender Metrics") +
coord_flip())
runApp()
ggplot(crim_gather, aes(Nature, age_bin)) +
geom_jitter()
ggplot(crim_gather, aes(Nature, age_bin)) +
geom_jitter()
ggplot(crim_gather, aes(Nature, age_bin)) +
geom_jitter() +
coord_flip()
plotly::ggplotly(ggplot(crim_gather, aes(Nature, age_bin)) +
geom_jitter() +
coord_flip())
plotly::ggplotly(ggplot(crim_gather, aes(Nature, ..count..)) +
geom_bar(aes(fill = age_bin), position = "dodge") +
coord_flip())
runApp()
plotly::ggplotly(ggplot(crim_gather, aes(Nature, ..count..)) +
geom_bar(aes(fill = age_bin), position = "dodge") +
labs(x= "Crime", y = "Count", title = "Interpol Crime Vs. Age Metrics") +
coord_flip())
plotly::ggplotly(ggplot(crim_gather, aes(Nature, ..count..)) +
geom_bar(aes(fill = age_bin), position = "dodge") +
labs(x= "Crime", y = "Count", title = "Interpol Crime Vs. Age Metrics") +
coord_flip())
runApp()
